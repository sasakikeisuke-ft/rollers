ここにコード一覧を記載する


<%# ひとまず書いてみる。必要なインスタンス変数などの設定を確認することが目的 %>

<%# モデルごとにマイグレーションファイル、モデルファイル、Rspecファイルを記載する。%>

<%# 通常モデルを対象とした記載を考える %>
<% if @model.model_type_id == 1 %>
  <%# まずはマイグレーションファイルから。ファイルまるまる表示する。 %>
  <div class="migration_file">
    <div class="target">
      <%= @model.name.tableize %>テーブルのマイグレーションファイル
    </div>
    <br>
    <div class="code-field">
      class Create<%= @model.name.pluralize.camelize %> < ActiveRecord::Migration[6.0]<br>
      <%= "  def chande" %><br>
      <%= "    create_table :" %><%= @model.name.tableize %> do |t|<br>
      
      <% @model.columns.each do |column| %>
        <%= "      " %>t.<%= column.data_type.type %>
        <% if column.data_type_id == 12 %>
          , foreign_key: true
        <% elsif column.must_exist && column.unique %>
          , null: false, unique: true
        <% elsif column.must_exist %>
          , null: false
        <% elsif column.unique %>
          , unique: true
        <% end %>
        <br>
      <% end %>

      <%# ここからは固定のtimestamps以下 %>
      <%= "      t.timestamps" %><br>
      <%= "    end" %><br>
      <%= "  end" %><br>
      <%= "end" %><br>
    </div>
  </div>

  <%# ここからモデルのコードを表示する %>

  <div class="model">
    class <%= @model.name.classify %><br>
    <div class="validation">
      <%# 表示内容を決めるための計算を行う。 %>
      <% presence_count = 0 %>
      <% active_hash_count = 0 %>
      <% @model.columns.each do |column| %>
        <% presence_count += 1 if column.must_exist %>
        <% active_hash_count += 1 if column.data_type_id == 13 %>
      <% end %>

      <% if presence_count >= 2 %>
        <%= '  ' %>with_options presence: true do<br>
        <% @model.columns.each do |column| %>
          <% if column.must_exist %>
            <%= '    validates :' %><%= column.name %>
            <%# オプションを付け足していく %>
            <% column.options.each do |option| %>
              <% if column.data_type_id == 1 %>
                <%= option.option_type.code %>
              <% elsif column.data_type_id == 3 %>
                <%= '              format: { with: /\A[0-9]+\z/, message: "is invalid. Input half-width characters"},' %><br>
                <%= '    ' %><%= column.data_type.type %>
              <% end %>
              <% if @application.gemfile.rails_i18n %>
                <% option.option_type.message_ja %>
              <% else %>
                <% option.option_type.message_en %>
              <% end %> }
            <% end %>
            <br>
          <% end %>
        <% end %>
        <p><%= '  end' %></p> <%# with_optionsに対するend %>
      <% else %><%# 空欄禁止が一つ、または存在しない場合 %>
        <% @model.columns.each do |column| %>

            <%= '  validates :' %><%= column.name %>
            <%= column.option_type.code %>
            <% if @application.gemfile.rails_i18n %>
              <% option.option_type.message_ja %>
            <% else %>
              <% option.option_type.message_en %>
            <% end %> }
          
          <br>
        <% end %>
      <% end %>
      <br>
      <%# ActiveHashに対するバリデーション %>
      <% if active_hash_count >= 2 %>
        <p><%= '    ' %>with_options numericality: { other_than: 0, message: "can't be blank" } do </p>
        <% model.columns.each do |column| %>
          <% if column.data_type_id == 13 %>
            <p><%= '      validates :' %><%= column.name %> </p>
          <% end %>
        <% end %>
      <% elsif active_hash_count == 1 %>
        <p><%= '      ' %><%= column.name if column.data_type_id ==13 %></p>
      <% end %>
      <p><%= '    end' %></p>
      <p><%= '  end' %></p>
      <p><%= 'end' %></p>
    </div> <%#/validation %>


    <div class="association">
      <%# referencesの対象=belongs_toの対象のため、抽出し記載 %>
      <% @model.columns.each do |column| %>
        <% if column.data_type_id == 12 %>
          <p><%= '  belongs_to :' %><%= column.name %> </p>
        <% end %>
      <% end %>

      <%# has_many/oneの記述を行う。%>
      <%# 当モデルと同名のカラムを持つ=アソシエーションを組んでいるモデルを探し出す %>
      <% @columns.each do |column| %>
        <% if column.name == @model.name && @model.not_only %>
          <p><%= 'has_many :' %><%= column.model.name %></p>
        <% elsif column.name == @model.name %>
          <p><%= 'has_one :' %><%= column.model.name %></p>
        <% end %>
      <% end %>
      <br>
      <%# ActiveHashに関するアソシエーション %>
      <% if active_hash_count >= 1 %>
        <p><%= '  extend ActiveHash::Associations::ActiveRecordExtensions' %></p>
        <% model.columns.each do |column| %>
          <% if column.data_type_id == 13 %>
            <p><%= '  belongs_to:' %><% column.name %></p>
          <% end %>
        <% end %>
      <% end %>
    </div> <%#/association %>


    <p>end</p> <%# モデルファイルの記載の終了 %>
  </div>


<% end %> <%#/ if model.model_type_id == 1 %>

<%# そのほかメモ
references型のカラムの登録時には、オプションを飛ばしちゃっていいかも。オプションはforeign_key: trueで固定なので

この後の追加実装予定
・Rspec
・日本語化用のファイル。ファイル自体は別の場所で作成予定
・Formオブジェクトパターン、同時に二つのモデルに保存するやつ。一応同じ感じに表示したいが用途が違いすぎるか？。
%>
